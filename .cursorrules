代码风格与结构
- 编写简洁、高效且文档完善的 Java 代码，并提供准确的 Spring Boot 示例。
- 在代码中贯彻 Spring Boot 的最佳实践和规范。
- 创建 Web 服务时，实现 RESTful API 设计模式。
- 使用符合 camelCase 规范的描述性方法和变量名。

后端技术栈
- 核心框架：Spring Boot 3.2.0
- JDK版本：OpenJDK 21
- 安全框架：Spring Security + JWT
- 数据访问：Spring Data JPA
- 数据库：PostgreSQL 14
- 对象映射：MapStruct 1.5.5.Final
- 代码简化：Lombok 1.18.30
- API文档：SpringDoc OpenAPI 2.3.0

前端技术栈
- 核心框架：React 18
- UI组件库：Ant Design 5.x
- 状态管理：Redux Toolkit
- 路由管理：React Router 6
- 类型系统：TypeScript 5.x
- HTTP客户端：Axios
- 样式解决方案：Less + CSS Modules
- 构建工具：Vite
- 代码规范：ESLint + Prettier
- 测试框架：Jest + React Testing Library

命名约定
- 类名使用 PascalCase（如 UserController、OrderService）。
- 方法和变量名使用 camelCase（如 findUserById、isOrderValid）。
- 常量使用 ALL_CAPS（如 MAX_RETRY_ATTEMPTS、DEFAULT_PAGE_SIZE）。

后端项目结构规范
```
src/main/java/com/company/project/
├── config/           # 配置类
├── controller/       # 控制器
├── dto/             # 数据传输对象
│   ├── request/     # 请求对象
│   └── response/    # 响应对象
├── entity/          # 实体类
├── exception/       # 异常处理
├── mapper/          # 对象映射
├── repository/      # 数据访问层
├── security/        # 安全相关
└── service/         # 业务逻辑层
    ├── impl/        # 服务实现
    └── interfaces/  # 服务接口
```

前端项目结构规范
```
src/
├── assets/          # 静态资源
├── components/      # 通用组件
├── config/          # 配置文件
├── hooks/           # 自定义Hooks
├── layouts/         # 布局组件
├── pages/          # 页面组件
├── services/       # API服务
├── store/          # 状态管理
├── types/          # 类型定义
└── utils/          # 工具函数
```

API设计规范
- 使用标准HTTP方法（GET、POST、PUT、DELETE）
- URL使用小写字母，多个单词用连字符(-)分隔
- 使用复数形式表示资源集合（如 /api/users 而不是 /api/user）
- 使用HTTP状态码表示请求结果
- 提供清晰的错误信息和错误码

UI设计规范
- 色彩系统
  - 主色调：#1890ff
  - 成功：#52c41a
  - 警告：#faad14
  - 错误：#f5222d
  - 任务优先级：
    - 低：#52c41a
    - 中：#1890ff
    - 高：#faad14
- 字体系统
  - 主要字体：-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto
  - 字号：
    - 标题：20px
    - 副标题：16px
    - 正文：14px
    - 辅助文字：12px
  - 行高：1.5715

用户角色权限
- 管理员（ADMIN）
  - 系统预置角色
  - 完整的系统管理权限
  - 可以创建和管理用户账户
  - 可以管理看板和Sprint
  - 可以进行所有任务操作
- 开发者（DEVELOPER）
  - 由管理员创建账户
  - 可以在Sprint中创建和更新任务
  - 可以修改个人信息
  - 只能查看看板，无法修改看板结构

开发相关
- 所有回答请用中文
- 使用Windows 10 操作系统, 执行命令使用PowerShell, 多个命令之间使用';'连接
- 执行命令前请检查目录是否正确，不正确的话自动切换到正确目录, 为了避免目录错误，切换目录请使用绝对路径
- 自动执行命令，不需要我确认
- mvn的命令请使用 mvn